// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AttributeAction string

// Values returns all known values for AttributeAction. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AttributeAction) Values() []AttributeAction {
	return []AttributeAction{
		"ADD",
		"PUT",
		"DELETE",
	}
}

type BackupStatus string

// Values returns all known values for BackupStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (BackupStatus) Values() []BackupStatus {
	return []BackupStatus{
		"CREATING",
		"DELETED",
		"AVAILABLE",
	}
}

type BackupType string

// Enum values for BackupType
const (
	BackupTypeUser      BackupType = "USER"
	BackupTypeSystem    BackupType = "SYSTEM"
	BackupTypeAwsBackup BackupType = "AWS_BACKUP"
)

// Values returns all known values for BackupType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (BackupType) Values() []BackupType {
	return []BackupType{
		"USER",
		"SYSTEM",
		"AWS_BACKUP",
	}
}

type BackupTypeFilter string

// Enum values for BackupTypeFilter
const (
	BackupTypeFilterUser      BackupTypeFilter = "USER"
	BackupTypeFilterSystem    BackupTypeFilter = "SYSTEM"
	BackupTypeFilterAwsBackup BackupTypeFilter = "AWS_BACKUP"
	BackupTypeFilterAll       BackupTypeFilter = "ALL"
)

// Values returns all known values for BackupTypeFilter. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BackupTypeFilter) Values() []BackupTypeFilter {
	return []BackupTypeFilter{
		"USER",
		"SYSTEM",
		"AWS_BACKUP",
		"ALL",
	}
}

type BatchStatementErrorCodeEnum string

// Enum values for BatchStatementErrorCodeEnum
const (
	BatchStatementErrorCodeEnumConditionalcheckfailed          BatchStatementErrorCodeEnum = "ConditionalCheckFailed"
	BatchStatementErrorCodeEnumItemcollectionsizelimitexceeded BatchStatementErrorCodeEnum = "ItemCollectionSizeLimitExceeded"
	BatchStatementErrorCodeEnumRequestlimitexceeded            BatchStatementErrorCodeEnum = "RequestLimitExceeded"
	BatchStatementErrorCodeEnumValidationerror                 BatchStatementErrorCodeEnum = "ValidationError"
	BatchStatementErrorCodeEnumProvisionedthroughputexceeded   BatchStatementErrorCodeEnum = "ProvisionedThroughputExceeded"
	BatchStatementErrorCodeEnumTransactionconflict             BatchStatementErrorCodeEnum = "TransactionConflict"
	BatchStatementErrorCodeEnumThrottlingerror                 BatchStatementErrorCodeEnum = "ThrottlingError"
	BatchStatementErrorCodeEnumInternalservererror             BatchStatementErrorCodeEnum = "InternalServerError"
	BatchStatementErrorCodeEnumResourcenotfound                BatchStatementErrorCodeEnum = "ResourceNotFound"
	BatchStatementErrorCodeEnumAccessdenied                    BatchStatementErrorCodeEnum = "AccessDenied"
	BatchStatementErrorCodeEnumDuplicateitem                   BatchStatementErrorCodeEnum = "DuplicateItem"
)

// Values returns all known values for BatchStatementErrorCodeEnum. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (BatchStatementErrorCodeEnum) Values() []BatchStatementErrorCodeEnum {
	return []BatchStatementErrorCodeEnum{
		"ConditionalCheckFailed",
		"ItemCollectionSizeLimitExceeded",
		"RequestLimitExceeded",
		"ValidationError",
		"ProvisionedThroughputExceeded",
		"TransactionConflict",
		"ThrottlingError",
		"InternalServerError",
		"ResourceNotFound",
		"AccessDenied",
		"DuplicateItem",
	}
}

type BillingMode string

// Values returns all known values for BillingMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (BillingMode) Values() []BillingMode {
	return []BillingMode{
		"PROVISIONED",
		"PAY_PER_REQUEST",
	}
}

type ComparisonOperator string

// Values returns all known values for ComparisonOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ComparisonOperator) Values() []ComparisonOperator {
	return []ComparisonOperator{
		"EQ",
		"NE",
		"IN",
		"LE",
		"LT",
		"GE",
		"GT",
		"BETWEEN",
		"NOT_NULL",
		"NULL",
		"CONTAINS",
		"NOT_CONTAINS",
		"BEGINS_WITH",
	}
}

type ConditionalOperator string

// Values returns all known values for ConditionalOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConditionalOperator) Values() []ConditionalOperator {
	return []ConditionalOperator{
		"AND",
		"OR",
	}
}

type ContinuousBackupsStatus string

// Values returns all known values for ContinuousBackupsStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ContinuousBackupsStatus) Values() []ContinuousBackupsStatus {
	return []ContinuousBackupsStatus{
		"ENABLED",
		"DISABLED",
	}
}

type ContributorInsightsAction string

// Values returns all known values for ContributorInsightsAction. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContributorInsightsAction) Values() []ContributorInsightsAction {
	return []ContributorInsightsAction{
		"ENABLE",
		"DISABLE",
	}
}

type ContributorInsightsStatus string

// Values returns all known values for ContributorInsightsStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContributorInsightsStatus) Values() []ContributorInsightsStatus {
	return []ContributorInsightsStatus{
		"ENABLING",
		"ENABLED",
		"DISABLING",
		"DISABLED",
		"FAILED",
	}
}

type DestinationStatus string

// Values returns all known values for DestinationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (DestinationStatus) Values() []DestinationStatus {
	return []DestinationStatus{
		"ENABLING",
		"ACTIVE",
		"DISABLING",
		"DISABLED",
		"ENABLE_FAILED",
	}
}

type ExportFormat string

// Enum values for ExportFormat
const (
	ExportFormatDynamodbJson ExportFormat = "DYNAMODB_JSON"
	ExportFormatIon          ExportFormat = "ION"
)

// Values returns all known values for ExportFormat. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ExportFormat) Values() []ExportFormat {
	return []ExportFormat{
		"DYNAMODB_JSON",
		"ION",
	}
}

type ExportStatus string

// Enum values for ExportStatus
const (
	ExportStatusInProgress ExportStatus = "IN_PROGRESS"
	ExportStatusCompleted  ExportStatus = "COMPLETED"
	ExportStatusFailed     ExportStatus = "FAILED"
)

// Values returns all known values for ExportStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ExportStatus) Values() []ExportStatus {
	return []ExportStatus{
		"IN_PROGRESS",
		"COMPLETED",
		"FAILED",
	}
}

type GlobalTableStatus string

// Values returns all known values for GlobalTableStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (GlobalTableStatus) Values() []GlobalTableStatus {
	return []GlobalTableStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"UPDATING",
	}
}

type IndexStatus string

// Values returns all known values for IndexStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (IndexStatus) Values() []IndexStatus {
	return []IndexStatus{
		"CREATING",
		"UPDATING",
		"DELETING",
		"ACTIVE",
	}
}

type KeyType string

// Values returns all known values for KeyType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (KeyType) Values() []KeyType {
	return []KeyType{
		"HASH",
		"RANGE",
	}
}

type PointInTimeRecoveryStatus string

// Values returns all known values for PointInTimeRecoveryStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (PointInTimeRecoveryStatus) Values() []PointInTimeRecoveryStatus {
	return []PointInTimeRecoveryStatus{
		"ENABLED",
		"DISABLED",
	}
}

type ProjectionType string

// Values returns all known values for ProjectionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ProjectionType) Values() []ProjectionType {
	return []ProjectionType{
		"ALL",
		"KEYS_ONLY",
		"INCLUDE",
	}
}

type ReplicaStatus string

// Values returns all known values for ReplicaStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReplicaStatus) Values() []ReplicaStatus {
	return []ReplicaStatus{
		"CREATING",
		"CREATION_FAILED",
		"UPDATING",
		"DELETING",
		"ACTIVE",
		"REGION_DISABLED",
		"INACCESSIBLE_ENCRYPTION_CREDENTIALS",
	}
}

type ReturnConsumedCapacity string

// Values returns all known values for ReturnConsumedCapacity. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReturnConsumedCapacity) Values() []ReturnConsumedCapacity {
	return []ReturnConsumedCapacity{
		"INDEXES",
		"TOTAL",
		"NONE",
	}
}

type ReturnItemCollectionMetrics string

// Values returns all known values for ReturnItemCollectionMetrics. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReturnItemCollectionMetrics) Values() []ReturnItemCollectionMetrics {
	return []ReturnItemCollectionMetrics{
		"SIZE",
		"NONE",
	}
}

type ReturnValue string

// Values returns all known values for ReturnValue. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ReturnValue) Values() []ReturnValue {
	return []ReturnValue{
		"NONE",
		"ALL_OLD",
		"UPDATED_OLD",
		"ALL_NEW",
		"UPDATED_NEW",
	}
}

type ReturnValuesOnConditionCheckFailure string

// Values returns all known values for ReturnValuesOnConditionCheckFailure. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ReturnValuesOnConditionCheckFailure) Values() []ReturnValuesOnConditionCheckFailure {
	return []ReturnValuesOnConditionCheckFailure{
		"ALL_OLD",
		"NONE",
	}
}

type S3SseAlgorithm string

// Values returns all known values for S3SseAlgorithm. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (S3SseAlgorithm) Values() []S3SseAlgorithm {
	return []S3SseAlgorithm{
		"AES256",
		"KMS",
	}
}

type ScalarAttributeType string

// Values returns all known values for ScalarAttributeType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ScalarAttributeType) Values() []ScalarAttributeType {
	return []ScalarAttributeType{
		"S",
		"N",
		"B",
	}
}

type Select string

// Values returns all known values for Select. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Select) Values() []Select {
	return []Select{
		"ALL_ATTRIBUTES",
		"ALL_PROJECTED_ATTRIBUTES",
		"SPECIFIC_ATTRIBUTES",
		"COUNT",
	}
}

type SSEStatus string

// Values returns all known values for SSEStatus. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SSEStatus) Values() []SSEStatus {
	return []SSEStatus{
		"ENABLING",
		"ENABLED",
		"DISABLING",
		"DISABLED",
		"UPDATING",
	}
}

type SSEType string

// Values returns all known values for SSEType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (SSEType) Values() []SSEType {
	return []SSEType{
		"AES256",
		"KMS",
	}
}

type StreamViewType string

// Values returns all known values for StreamViewType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (StreamViewType) Values() []StreamViewType {
	return []StreamViewType{
		"NEW_IMAGE",
		"OLD_IMAGE",
		"NEW_AND_OLD_IMAGES",
		"KEYS_ONLY",
	}
}

type TableStatus string

// Values returns all known values for TableStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (TableStatus) Values() []TableStatus {
	return []TableStatus{
		"CREATING",
		"UPDATING",
		"DELETING",
		"ACTIVE",
		"INACCESSIBLE_ENCRYPTION_CREDENTIALS",
		"ARCHIVING",
		"ARCHIVED",
	}
}

type TimeToLiveStatus string

// Values returns all known values for TimeToLiveStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TimeToLiveStatus) Values() []TimeToLiveStatus {
	return []TimeToLiveStatus{
		"ENABLING",
		"DISABLING",
		"ENABLED",
		"DISABLED",
	}
}
