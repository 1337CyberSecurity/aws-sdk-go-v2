// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AccountLimitType string

// Values returns all known values for AccountLimitType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (AccountLimitType) Values() []AccountLimitType {
	return []AccountLimitType{
		"MAX_HEALTH_CHECKS_BY_OWNER",
		"MAX_HOSTED_ZONES_BY_OWNER",
		"MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER",
		"MAX_REUSABLE_DELEGATION_SETS_BY_OWNER",
		"MAX_TRAFFIC_POLICIES_BY_OWNER",
	}
}

type ChangeAction string

// Values returns all known values for ChangeAction. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeAction) Values() []ChangeAction {
	return []ChangeAction{
		"CREATE",
		"DELETE",
		"UPSERT",
	}
}

type ChangeStatus string

// Values returns all known values for ChangeStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (ChangeStatus) Values() []ChangeStatus {
	return []ChangeStatus{
		"PENDING",
		"INSYNC",
	}
}

type CloudWatchRegion string

// Values returns all known values for CloudWatchRegion. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CloudWatchRegion) Values() []CloudWatchRegion {
	return []CloudWatchRegion{
		"us-east-1",
		"us-east-2",
		"us-west-1",
		"us-west-2",
		"ca-central-1",
		"eu-central-1",
		"eu-west-1",
		"eu-west-2",
		"eu-west-3",
		"ap-east-1",
		"me-south-1",
		"ap-south-1",
		"ap-southeast-1",
		"ap-southeast-2",
		"ap-northeast-1",
		"ap-northeast-2",
		"ap-northeast-3",
		"eu-north-1",
		"sa-east-1",
		"cn-northwest-1",
		"cn-north-1",
		"af-south-1",
		"eu-south-1",
		"us-gov-west-1",
		"us-gov-east-1",
		"us-iso-east-1",
		"us-isob-east-1",
	}
}

type ComparisonOperator string

// Values returns all known values for ComparisonOperator. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ComparisonOperator) Values() []ComparisonOperator {
	return []ComparisonOperator{
		"GreaterThanOrEqualToThreshold",
		"GreaterThanThreshold",
		"LessThanThreshold",
		"LessThanOrEqualToThreshold",
	}
}

type HealthCheckRegion string

// Values returns all known values for HealthCheckRegion. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HealthCheckRegion) Values() []HealthCheckRegion {
	return []HealthCheckRegion{
		"us-east-1",
		"us-west-1",
		"us-west-2",
		"eu-west-1",
		"ap-southeast-1",
		"ap-southeast-2",
		"ap-northeast-1",
		"sa-east-1",
	}
}

type HealthCheckType string

// Enum values for HealthCheckType
const (
	HealthCheckTypeHttp             HealthCheckType = "HTTP"
	HealthCheckTypeHttps            HealthCheckType = "HTTPS"
	HealthCheckTypeHttpStrMatch     HealthCheckType = "HTTP_STR_MATCH"
	HealthCheckTypeHttpsStrMatch    HealthCheckType = "HTTPS_STR_MATCH"
	HealthCheckTypeTcp              HealthCheckType = "TCP"
	HealthCheckTypeCalculated       HealthCheckType = "CALCULATED"
	HealthCheckTypeCloudwatchMetric HealthCheckType = "CLOUDWATCH_METRIC"
)

// Values returns all known values for HealthCheckType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HealthCheckType) Values() []HealthCheckType {
	return []HealthCheckType{
		"HTTP",
		"HTTPS",
		"HTTP_STR_MATCH",
		"HTTPS_STR_MATCH",
		"TCP",
		"CALCULATED",
		"CLOUDWATCH_METRIC",
	}
}

type HostedZoneLimitType string

// Values returns all known values for HostedZoneLimitType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (HostedZoneLimitType) Values() []HostedZoneLimitType {
	return []HostedZoneLimitType{
		"MAX_RRSETS_BY_ZONE",
		"MAX_VPCS_ASSOCIATED_BY_ZONE",
	}
}

type InsufficientDataHealthStatus string

// Values returns all known values for InsufficientDataHealthStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (InsufficientDataHealthStatus) Values() []InsufficientDataHealthStatus {
	return []InsufficientDataHealthStatus{
		"Healthy",
		"Unhealthy",
		"LastKnownStatus",
	}
}

type ResettableElementName string

// Values returns all known values for ResettableElementName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResettableElementName) Values() []ResettableElementName {
	return []ResettableElementName{
		"FullyQualifiedDomainName",
		"Regions",
		"ResourcePath",
		"ChildHealthChecks",
	}
}

type ResourceRecordSetFailover string

// Values returns all known values for ResourceRecordSetFailover. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceRecordSetFailover) Values() []ResourceRecordSetFailover {
	return []ResourceRecordSetFailover{
		"PRIMARY",
		"SECONDARY",
	}
}

type ResourceRecordSetRegion string

// Values returns all known values for ResourceRecordSetRegion. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ResourceRecordSetRegion) Values() []ResourceRecordSetRegion {
	return []ResourceRecordSetRegion{
		"us-east-1",
		"us-east-2",
		"us-west-1",
		"us-west-2",
		"ca-central-1",
		"eu-west-1",
		"eu-west-2",
		"eu-west-3",
		"eu-central-1",
		"ap-southeast-1",
		"ap-southeast-2",
		"ap-northeast-1",
		"ap-northeast-2",
		"ap-northeast-3",
		"eu-north-1",
		"sa-east-1",
		"cn-north-1",
		"cn-northwest-1",
		"ap-east-1",
		"me-south-1",
		"ap-south-1",
		"af-south-1",
		"eu-south-1",
	}
}

type ReusableDelegationSetLimitType string

// Values returns all known values for ReusableDelegationSetLimitType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ReusableDelegationSetLimitType) Values() []ReusableDelegationSetLimitType {
	return []ReusableDelegationSetLimitType{
		"MAX_ZONES_BY_REUSABLE_DELEGATION_SET",
	}
}

type RRType string

// Values returns all known values for RRType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (RRType) Values() []RRType {
	return []RRType{
		"SOA",
		"A",
		"TXT",
		"NS",
		"CNAME",
		"MX",
		"NAPTR",
		"PTR",
		"SRV",
		"SPF",
		"AAAA",
		"CAA",
	}
}

type Statistic string

// Values returns all known values for Statistic. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Statistic) Values() []Statistic {
	return []Statistic{
		"Average",
		"Sum",
		"SampleCount",
		"Maximum",
		"Minimum",
	}
}

type TagResourceType string

// Values returns all known values for TagResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TagResourceType) Values() []TagResourceType {
	return []TagResourceType{
		"healthcheck",
		"hostedzone",
	}
}

type VPCRegion string

// Values returns all known values for VPCRegion. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (VPCRegion) Values() []VPCRegion {
	return []VPCRegion{
		"us-east-1",
		"us-east-2",
		"us-west-1",
		"us-west-2",
		"eu-west-1",
		"eu-west-2",
		"eu-west-3",
		"eu-central-1",
		"ap-east-1",
		"me-south-1",
		"us-gov-west-1",
		"us-gov-east-1",
		"us-iso-east-1",
		"us-isob-east-1",
		"ap-southeast-1",
		"ap-southeast-2",
		"ap-south-1",
		"ap-northeast-1",
		"ap-northeast-2",
		"ap-northeast-3",
		"eu-north-1",
		"sa-east-1",
		"ca-central-1",
		"cn-north-1",
		"af-south-1",
		"eu-south-1",
	}
}
