// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AnalyticsS3ExportFileFormat string

// Values returns all known values for AnalyticsS3ExportFileFormat. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (AnalyticsS3ExportFileFormat) Values() []AnalyticsS3ExportFileFormat {
	return []AnalyticsS3ExportFileFormat{
		"CSV",
	}
}

type ArchiveStatus string

// Values returns all known values for ArchiveStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ArchiveStatus) Values() []ArchiveStatus {
	return []ArchiveStatus{
		"ARCHIVE_ACCESS",
		"DEEP_ARCHIVE_ACCESS",
	}
}

type BucketAccelerateStatus string

// Values returns all known values for BucketAccelerateStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BucketAccelerateStatus) Values() []BucketAccelerateStatus {
	return []BucketAccelerateStatus{
		"Enabled",
		"Suspended",
	}
}

type BucketCannedACL string

// Values returns all known values for BucketCannedACL. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BucketCannedACL) Values() []BucketCannedACL {
	return []BucketCannedACL{
		"private",
		"public-read",
		"public-read-write",
		"authenticated-read",
	}
}

type BucketLocationConstraint string

// Values returns all known values for BucketLocationConstraint. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BucketLocationConstraint) Values() []BucketLocationConstraint {
	return []BucketLocationConstraint{
		"af-south-1",
		"ap-east-1",
		"ap-northeast-1",
		"ap-northeast-2",
		"ap-northeast-3",
		"ap-south-1",
		"ap-southeast-1",
		"ap-southeast-2",
		"ca-central-1",
		"cn-north-1",
		"cn-northwest-1",
		"EU",
		"eu-central-1",
		"eu-north-1",
		"eu-south-1",
		"eu-west-1",
		"eu-west-2",
		"eu-west-3",
		"me-south-1",
		"sa-east-1",
		"us-east-2",
		"us-gov-east-1",
		"us-gov-west-1",
		"us-west-1",
		"us-west-2",
	}
}

type BucketLogsPermission string

// Values returns all known values for BucketLogsPermission. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BucketLogsPermission) Values() []BucketLogsPermission {
	return []BucketLogsPermission{
		"FULL_CONTROL",
		"READ",
		"WRITE",
	}
}

type BucketVersioningStatus string

// Values returns all known values for BucketVersioningStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (BucketVersioningStatus) Values() []BucketVersioningStatus {
	return []BucketVersioningStatus{
		"Enabled",
		"Suspended",
	}
}

type CompressionType string

// Values returns all known values for CompressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CompressionType) Values() []CompressionType {
	return []CompressionType{
		"NONE",
		"GZIP",
		"BZIP2",
	}
}

type DeleteMarkerReplicationStatus string

// Values returns all known values for DeleteMarkerReplicationStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (DeleteMarkerReplicationStatus) Values() []DeleteMarkerReplicationStatus {
	return []DeleteMarkerReplicationStatus{
		"Enabled",
		"Disabled",
	}
}

type EncodingType string

// Values returns all known values for EncodingType. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (EncodingType) Values() []EncodingType {
	return []EncodingType{
		"url",
	}
}

type Event string

// Values returns all known values for Event. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Event) Values() []Event {
	return []Event{
		"s3:ReducedRedundancyLostObject",
		"s3:ObjectCreated:*",
		"s3:ObjectCreated:Put",
		"s3:ObjectCreated:Post",
		"s3:ObjectCreated:Copy",
		"s3:ObjectCreated:CompleteMultipartUpload",
		"s3:ObjectRemoved:*",
		"s3:ObjectRemoved:Delete",
		"s3:ObjectRemoved:DeleteMarkerCreated",
		"s3:ObjectRestore:*",
		"s3:ObjectRestore:Post",
		"s3:ObjectRestore:Completed",
		"s3:Replication:*",
		"s3:Replication:OperationFailedReplication",
		"s3:Replication:OperationNotTracked",
		"s3:Replication:OperationMissedThreshold",
		"s3:Replication:OperationReplicatedAfterThreshold",
	}
}

type ExistingObjectReplicationStatus string

// Values returns all known values for ExistingObjectReplicationStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ExistingObjectReplicationStatus) Values() []ExistingObjectReplicationStatus {
	return []ExistingObjectReplicationStatus{
		"Enabled",
		"Disabled",
	}
}

type ExpirationStatus string

// Values returns all known values for ExpirationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExpirationStatus) Values() []ExpirationStatus {
	return []ExpirationStatus{
		"Enabled",
		"Disabled",
	}
}

type ExpressionType string

// Values returns all known values for ExpressionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ExpressionType) Values() []ExpressionType {
	return []ExpressionType{
		"SQL",
	}
}

type FileHeaderInfo string

// Enum values for FileHeaderInfo
const (
	FileHeaderInfoUse    FileHeaderInfo = "USE"
	FileHeaderInfoIgnore FileHeaderInfo = "IGNORE"
	FileHeaderInfoNone   FileHeaderInfo = "NONE"
)

// Values returns all known values for FileHeaderInfo. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FileHeaderInfo) Values() []FileHeaderInfo {
	return []FileHeaderInfo{
		"USE",
		"IGNORE",
		"NONE",
	}
}

type FilterRuleName string

// Values returns all known values for FilterRuleName. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FilterRuleName) Values() []FilterRuleName {
	return []FilterRuleName{
		"prefix",
		"suffix",
	}
}

type IntelligentTieringAccessTier string

// Values returns all known values for IntelligentTieringAccessTier. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (IntelligentTieringAccessTier) Values() []IntelligentTieringAccessTier {
	return []IntelligentTieringAccessTier{
		"ARCHIVE_ACCESS",
		"DEEP_ARCHIVE_ACCESS",
	}
}

type IntelligentTieringStatus string

// Values returns all known values for IntelligentTieringStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (IntelligentTieringStatus) Values() []IntelligentTieringStatus {
	return []IntelligentTieringStatus{
		"Enabled",
		"Disabled",
	}
}

type InventoryFormat string

// Values returns all known values for InventoryFormat. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InventoryFormat) Values() []InventoryFormat {
	return []InventoryFormat{
		"CSV",
		"ORC",
		"Parquet",
	}
}

type InventoryFrequency string

// Values returns all known values for InventoryFrequency. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InventoryFrequency) Values() []InventoryFrequency {
	return []InventoryFrequency{
		"Daily",
		"Weekly",
	}
}

type InventoryIncludedObjectVersions string

// Values returns all known values for InventoryIncludedObjectVersions. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (InventoryIncludedObjectVersions) Values() []InventoryIncludedObjectVersions {
	return []InventoryIncludedObjectVersions{
		"All",
		"Current",
	}
}

type InventoryOptionalField string

// Values returns all known values for InventoryOptionalField. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (InventoryOptionalField) Values() []InventoryOptionalField {
	return []InventoryOptionalField{
		"Size",
		"LastModifiedDate",
		"StorageClass",
		"ETag",
		"IsMultipartUploaded",
		"ReplicationStatus",
		"EncryptionStatus",
		"ObjectLockRetainUntilDate",
		"ObjectLockMode",
		"ObjectLockLegalHoldStatus",
		"IntelligentTieringAccessTier",
	}
}

type JSONType string

// Enum values for JSONType
const (
	JSONTypeDocument JSONType = "DOCUMENT"
	JSONTypeLines    JSONType = "LINES"
)

// Values returns all known values for JSONType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (JSONType) Values() []JSONType {
	return []JSONType{
		"DOCUMENT",
		"LINES",
	}
}

type MetadataDirective string

// Values returns all known values for MetadataDirective. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetadataDirective) Values() []MetadataDirective {
	return []MetadataDirective{
		"COPY",
		"REPLACE",
	}
}

type MetricsStatus string

// Values returns all known values for MetricsStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MetricsStatus) Values() []MetricsStatus {
	return []MetricsStatus{
		"Enabled",
		"Disabled",
	}
}

type MFADelete string

// Values returns all known values for MFADelete. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (MFADelete) Values() []MFADelete {
	return []MFADelete{
		"Enabled",
		"Disabled",
	}
}

type MFADeleteStatus string

// Values returns all known values for MFADeleteStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MFADeleteStatus) Values() []MFADeleteStatus {
	return []MFADeleteStatus{
		"Enabled",
		"Disabled",
	}
}

type ObjectCannedACL string

// Values returns all known values for ObjectCannedACL. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectCannedACL) Values() []ObjectCannedACL {
	return []ObjectCannedACL{
		"private",
		"public-read",
		"public-read-write",
		"authenticated-read",
		"aws-exec-read",
		"bucket-owner-read",
		"bucket-owner-full-control",
	}
}

type ObjectLockEnabled string

// Values returns all known values for ObjectLockEnabled. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectLockEnabled) Values() []ObjectLockEnabled {
	return []ObjectLockEnabled{
		"Enabled",
	}
}

type ObjectLockLegalHoldStatus string

// Values returns all known values for ObjectLockLegalHoldStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ObjectLockLegalHoldStatus) Values() []ObjectLockLegalHoldStatus {
	return []ObjectLockLegalHoldStatus{
		"ON",
		"OFF",
	}
}

type ObjectLockMode string

// Values returns all known values for ObjectLockMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectLockMode) Values() []ObjectLockMode {
	return []ObjectLockMode{
		"GOVERNANCE",
		"COMPLIANCE",
	}
}

type ObjectLockRetentionMode string

// Values returns all known values for ObjectLockRetentionMode. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectLockRetentionMode) Values() []ObjectLockRetentionMode {
	return []ObjectLockRetentionMode{
		"GOVERNANCE",
		"COMPLIANCE",
	}
}

type ObjectOwnership string

// Values returns all known values for ObjectOwnership. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectOwnership) Values() []ObjectOwnership {
	return []ObjectOwnership{
		"BucketOwnerPreferred",
		"ObjectWriter",
	}
}

type ObjectStorageClass string

// Values returns all known values for ObjectStorageClass. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ObjectStorageClass) Values() []ObjectStorageClass {
	return []ObjectStorageClass{
		"STANDARD",
		"REDUCED_REDUNDANCY",
		"GLACIER",
		"STANDARD_IA",
		"ONEZONE_IA",
		"INTELLIGENT_TIERING",
		"DEEP_ARCHIVE",
		"OUTPOSTS",
	}
}

type ObjectVersionStorageClass string

// Values returns all known values for ObjectVersionStorageClass. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ObjectVersionStorageClass) Values() []ObjectVersionStorageClass {
	return []ObjectVersionStorageClass{
		"STANDARD",
	}
}

type OwnerOverride string

// Values returns all known values for OwnerOverride. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OwnerOverride) Values() []OwnerOverride {
	return []OwnerOverride{
		"Destination",
	}
}

type Payer string

// Values returns all known values for Payer. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Payer) Values() []Payer {
	return []Payer{
		"Requester",
		"BucketOwner",
	}
}

type Permission string

// Values returns all known values for Permission. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (Permission) Values() []Permission {
	return []Permission{
		"FULL_CONTROL",
		"WRITE",
		"WRITE_ACP",
		"READ",
		"READ_ACP",
	}
}

type Protocol string

// Values returns all known values for Protocol. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Protocol) Values() []Protocol {
	return []Protocol{
		"http",
		"https",
	}
}

type QuoteFields string

// Enum values for QuoteFields
const (
	QuoteFieldsAlways   QuoteFields = "ALWAYS"
	QuoteFieldsAsneeded QuoteFields = "ASNEEDED"
)

// Values returns all known values for QuoteFields. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (QuoteFields) Values() []QuoteFields {
	return []QuoteFields{
		"ALWAYS",
		"ASNEEDED",
	}
}

type ReplicaModificationsStatus string

// Values returns all known values for ReplicaModificationsStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ReplicaModificationsStatus) Values() []ReplicaModificationsStatus {
	return []ReplicaModificationsStatus{
		"Enabled",
		"Disabled",
	}
}

type ReplicationRuleStatus string

// Values returns all known values for ReplicationRuleStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReplicationRuleStatus) Values() []ReplicationRuleStatus {
	return []ReplicationRuleStatus{
		"Enabled",
		"Disabled",
	}
}

type ReplicationStatus string

// Values returns all known values for ReplicationStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReplicationStatus) Values() []ReplicationStatus {
	return []ReplicationStatus{
		"COMPLETE",
		"PENDING",
		"FAILED",
		"REPLICA",
	}
}

type ReplicationTimeStatus string

// Values returns all known values for ReplicationTimeStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ReplicationTimeStatus) Values() []ReplicationTimeStatus {
	return []ReplicationTimeStatus{
		"Enabled",
		"Disabled",
	}
}

type RequestCharged string

// Values returns all known values for RequestCharged. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RequestCharged) Values() []RequestCharged {
	return []RequestCharged{
		"requester",
	}
}

type RequestPayer string

// Values returns all known values for RequestPayer. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (RequestPayer) Values() []RequestPayer {
	return []RequestPayer{
		"requester",
	}
}

type RestoreRequestType string

// Enum values for RestoreRequestType
const (
	RestoreRequestTypeSelect RestoreRequestType = "SELECT"
)

// Values returns all known values for RestoreRequestType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (RestoreRequestType) Values() []RestoreRequestType {
	return []RestoreRequestType{
		"SELECT",
	}
}

type ServerSideEncryption string

// Values returns all known values for ServerSideEncryption. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ServerSideEncryption) Values() []ServerSideEncryption {
	return []ServerSideEncryption{
		"AES256",
		"aws:kms",
	}
}

type SseKmsEncryptedObjectsStatus string

// Values returns all known values for SseKmsEncryptedObjectsStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (SseKmsEncryptedObjectsStatus) Values() []SseKmsEncryptedObjectsStatus {
	return []SseKmsEncryptedObjectsStatus{
		"Enabled",
		"Disabled",
	}
}

type StorageClass string

// Values returns all known values for StorageClass. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (StorageClass) Values() []StorageClass {
	return []StorageClass{
		"STANDARD",
		"REDUCED_REDUNDANCY",
		"STANDARD_IA",
		"ONEZONE_IA",
		"INTELLIGENT_TIERING",
		"GLACIER",
		"DEEP_ARCHIVE",
		"OUTPOSTS",
	}
}

type StorageClassAnalysisSchemaVersion string

// Values returns all known values for StorageClassAnalysisSchemaVersion. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (StorageClassAnalysisSchemaVersion) Values() []StorageClassAnalysisSchemaVersion {
	return []StorageClassAnalysisSchemaVersion{
		"V_1",
	}
}

type TaggingDirective string

// Values returns all known values for TaggingDirective. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TaggingDirective) Values() []TaggingDirective {
	return []TaggingDirective{
		"COPY",
		"REPLACE",
	}
}

type Tier string

// Values returns all known values for Tier. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Tier) Values() []Tier {
	return []Tier{
		"Standard",
		"Bulk",
		"Expedited",
	}
}

type TransitionStorageClass string

// Values returns all known values for TransitionStorageClass. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (TransitionStorageClass) Values() []TransitionStorageClass {
	return []TransitionStorageClass{
		"GLACIER",
		"STANDARD_IA",
		"ONEZONE_IA",
		"INTELLIGENT_TIERING",
		"DEEP_ARCHIVE",
	}
}

type Type string

// Values returns all known values for Type. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Type) Values() []Type {
	return []Type{
		"CanonicalUser",
		"AmazonCustomerByEmail",
		"Group",
	}
}
