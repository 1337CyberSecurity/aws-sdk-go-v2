// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CachePolicyCookieBehavior string

// Values returns all known values for CachePolicyCookieBehavior. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (CachePolicyCookieBehavior) Values() []CachePolicyCookieBehavior {
	return []CachePolicyCookieBehavior{
		"none",
		"whitelist",
		"allExcept",
		"all",
	}
}

type CachePolicyHeaderBehavior string

// Values returns all known values for CachePolicyHeaderBehavior. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (CachePolicyHeaderBehavior) Values() []CachePolicyHeaderBehavior {
	return []CachePolicyHeaderBehavior{
		"none",
		"whitelist",
	}
}

type CachePolicyQueryStringBehavior string

// Values returns all known values for CachePolicyQueryStringBehavior. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (CachePolicyQueryStringBehavior) Values() []CachePolicyQueryStringBehavior {
	return []CachePolicyQueryStringBehavior{
		"none",
		"whitelist",
		"allExcept",
		"all",
	}
}

type CachePolicyType string

// Values returns all known values for CachePolicyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CachePolicyType) Values() []CachePolicyType {
	return []CachePolicyType{
		"managed",
		"custom",
	}
}

type CertificateSource string

// Values returns all known values for CertificateSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CertificateSource) Values() []CertificateSource {
	return []CertificateSource{
		"cloudfront",
		"iam",
		"acm",
	}
}

type EventType string

// Values returns all known values for EventType. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (EventType) Values() []EventType {
	return []EventType{
		"viewer-request",
		"viewer-response",
		"origin-request",
		"origin-response",
	}
}

type Format string

// Values returns all known values for Format. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Format) Values() []Format {
	return []Format{
		"URLEncoded",
	}
}

type GeoRestrictionType string

// Values returns all known values for GeoRestrictionType. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (GeoRestrictionType) Values() []GeoRestrictionType {
	return []GeoRestrictionType{
		"blacklist",
		"whitelist",
		"none",
	}
}

type HttpVersion string

// Values returns all known values for HttpVersion. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (HttpVersion) Values() []HttpVersion {
	return []HttpVersion{
		"http1.1",
		"http2",
	}
}

type ICPRecordalStatus string

// Values returns all known values for ICPRecordalStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ICPRecordalStatus) Values() []ICPRecordalStatus {
	return []ICPRecordalStatus{
		"APPROVED",
		"SUSPENDED",
		"PENDING",
	}
}

type ItemSelection string

// Values returns all known values for ItemSelection. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ItemSelection) Values() []ItemSelection {
	return []ItemSelection{
		"none",
		"whitelist",
		"all",
	}
}

type Method string

// Values returns all known values for Method. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Method) Values() []Method {
	return []Method{
		"GET",
		"HEAD",
		"POST",
		"PUT",
		"PATCH",
		"OPTIONS",
		"DELETE",
	}
}

type MinimumProtocolVersion string

// Values returns all known values for MinimumProtocolVersion. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (MinimumProtocolVersion) Values() []MinimumProtocolVersion {
	return []MinimumProtocolVersion{
		"SSLv3",
		"TLSv1",
		"TLSv1_2016",
		"TLSv1.1_2016",
		"TLSv1.2_2018",
		"TLSv1.2_2019",
	}
}

type OriginProtocolPolicy string

// Values returns all known values for OriginProtocolPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OriginProtocolPolicy) Values() []OriginProtocolPolicy {
	return []OriginProtocolPolicy{
		"http-only",
		"match-viewer",
		"https-only",
	}
}

type OriginRequestPolicyCookieBehavior string

// Values returns all known values for OriginRequestPolicyCookieBehavior. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (OriginRequestPolicyCookieBehavior) Values() []OriginRequestPolicyCookieBehavior {
	return []OriginRequestPolicyCookieBehavior{
		"none",
		"whitelist",
		"all",
	}
}

type OriginRequestPolicyHeaderBehavior string

// Values returns all known values for OriginRequestPolicyHeaderBehavior. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (OriginRequestPolicyHeaderBehavior) Values() []OriginRequestPolicyHeaderBehavior {
	return []OriginRequestPolicyHeaderBehavior{
		"none",
		"whitelist",
		"allViewer",
		"allViewerAndWhitelistCloudFront",
	}
}

type OriginRequestPolicyQueryStringBehavior string

// Values returns all known values for OriginRequestPolicyQueryStringBehavior. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (OriginRequestPolicyQueryStringBehavior) Values() []OriginRequestPolicyQueryStringBehavior {
	return []OriginRequestPolicyQueryStringBehavior{
		"none",
		"whitelist",
		"all",
	}
}

type OriginRequestPolicyType string

// Values returns all known values for OriginRequestPolicyType. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (OriginRequestPolicyType) Values() []OriginRequestPolicyType {
	return []OriginRequestPolicyType{
		"managed",
		"custom",
	}
}

type PriceClass string

// Values returns all known values for PriceClass. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (PriceClass) Values() []PriceClass {
	return []PriceClass{
		"PriceClass_100",
		"PriceClass_200",
		"PriceClass_All",
	}
}

type RealtimeMetricsSubscriptionStatus string

// Enum values for RealtimeMetricsSubscriptionStatus
const (
	RealtimeMetricsSubscriptionStatusEnabled  RealtimeMetricsSubscriptionStatus = "Enabled"
	RealtimeMetricsSubscriptionStatusDisabled RealtimeMetricsSubscriptionStatus = "Disabled"
)

// Values returns all known values for RealtimeMetricsSubscriptionStatus. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (RealtimeMetricsSubscriptionStatus) Values() []RealtimeMetricsSubscriptionStatus {
	return []RealtimeMetricsSubscriptionStatus{
		"Enabled",
		"Disabled",
	}
}

type SslProtocol string

// Values returns all known values for SslProtocol. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (SslProtocol) Values() []SslProtocol {
	return []SslProtocol{
		"SSLv3",
		"TLSv1",
		"TLSv1.1",
		"TLSv1.2",
	}
}

type SSLSupportMethod string

// Values returns all known values for SSLSupportMethod. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SSLSupportMethod) Values() []SSLSupportMethod {
	return []SSLSupportMethod{
		"sni-only",
		"vip",
		"static-ip",
	}
}

type ViewerProtocolPolicy string

// Values returns all known values for ViewerProtocolPolicy. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ViewerProtocolPolicy) Values() []ViewerProtocolPolicy {
	return []ViewerProtocolPolicy{
		"allow-all",
		"https-only",
		"redirect-to-https",
	}
}
